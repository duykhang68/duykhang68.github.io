<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hieu's blog</title>
    <description>My blog about Linux, Database, Infrastructure, some mathematics, and mindset.</description>
    <link>https://llnx.me/</link>
    <atom:link href="https://llnx.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 23 Jan 2019 16:15:45 +0700</pubDate>
    <lastBuildDate>Wed, 23 Jan 2019 16:15:45 +0700</lastBuildDate>
    <generator>Jekyll v3.5.1</generator>
    
      <item>
        <title>Some meaningful thoughts for entire 2018</title>
        <description>&lt;p&gt;This is a post for reminding these learned points, thinkings, ideas, mindsets about how to do and live better in 2018, only for myself. I logged because I scare that I will forget and go wrong or do the same mistake ever and ever again.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Time is a &lt;strong&gt;fixed&lt;/strong&gt; and the most important resource, if taking care too much about non-sense things, &lt;strong&gt;will have no time&lt;/strong&gt; for really right and important things in your life.&lt;/li&gt;
  &lt;li&gt;Run, think and &lt;strong&gt;improve continuously whatever&lt;/strong&gt;, even small/big things everyday. Live today in the same state as yesterday does not mean the same, it means &lt;strong&gt;lagging behind others&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Write down, well documented, or take note on somewhere because of &lt;strong&gt;forgetting process&lt;/strong&gt; in the human brain, but make sure &lt;strong&gt;never forget mindsets&lt;/strong&gt; and &lt;strong&gt;core thinking techniques&lt;/strong&gt; (like critical thinking, SWOT analysis,…). Details can forget, but cores must be in brain, seriously.&lt;/li&gt;
  &lt;li&gt;Must know &lt;strong&gt;why you do what you do?&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Should have private time for yourself (every week), no smartphone, no laptop, no people, just you and think about the past week or doing meditation for training attention and awareness, achieve a mentally clear and emotionally calm state.&lt;/li&gt;
&lt;/ul&gt;

&lt;!--description--&gt;

&lt;h4 id=&quot;there-are-only-2-basic-types-of-action&quot;&gt;There are only 2 basic types of action:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;One: you can totally control this.&lt;/li&gt;
  &lt;li&gt;Two: you be forced to do regardless of you hate or refuse to do, don’t care, let them come then let them go.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I want to note and share about &lt;strong&gt;the first one&lt;/strong&gt;. So you can control actions, think about:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Making decision for doing the right thing at right time for &lt;strong&gt;gaining highest value&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Focus on working scoped things during 8hrs working day, only for increasing quality of your company products, &lt;strong&gt;ignore non-sense things&lt;/strong&gt; (including fuckers and dirty ones, &lt;strong&gt;who the fuck cares&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;Do one thing, get it done first (minimum viable), take a rest then get back to work on improvement, check every case, every reason. &lt;strong&gt;DROP OTHERS&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Don’t fucking any care about trash, shitty, fuckers, stupid, nonsense, not related to you. &lt;strong&gt;IGNORE.IGNORE.IGNORE.&lt;/strong&gt; is the key.&lt;/li&gt;
  &lt;li&gt;I repeat: Time is a fixed and the most important resource, if taking care too much about non-sense things, will have no time for really right and important things in your life.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;It’s all about trade-offs and makes the right decisions.&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 08 Jan 2019 00:00:00 +0700</pubDate>
        <link>https://llnx.me/mindset/2019/01/08/Some-meaningful-thoughts-for-entire-2018.html</link>
        <guid isPermaLink="true">https://llnx.me/mindset/2019/01/08/Some-meaningful-thoughts-for-entire-2018.html</guid>
        
        
        <category>mindset</category>
        
      </item>
    
      <item>
        <title>Critical vulnerability on policykit of systemd</title>
        <description>&lt;p&gt;&lt;strong&gt;[CVE-2018-19788]&lt;/strong&gt;: A flaw was found in PolicyKit (aka &lt;code class=&quot;highlighter-rouge&quot;&gt;polkit 0.115&lt;/code&gt;) that allows a user with a uid greater than &lt;code class=&quot;highlighter-rouge&quot;&gt;INT_MAX&lt;/code&gt; to successfully execute any &lt;code class=&quot;highlighter-rouge&quot;&gt;systemctl&lt;/code&gt; command.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/systemd/systemd/issues/11026&quot;&gt;https://github.com/systemd/systemd/issues/11026&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/freedesktop/polkit/blob/8c1bc8a/src/programs/pkttyagent.c#L156&quot;&gt;https://github.com/freedesktop/polkit/blob/8c1bc8a/src/programs/pkttyagent.c#L156&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.freedesktop.org/polkit/polkit/issues/74&quot;&gt;https://gitlab.freedesktop.org/polkit/polkit/issues/74&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Find out more about CVE-2018-19788 from the &lt;a href=&quot;http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-19788&quot;&gt;MITRE CVE&lt;/a&gt; dictionary and &lt;a href=&quot;http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2018-19788&quot;&gt;NIST NVD&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/CVE-2018-19788.webp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;!--description--&gt;

&lt;h3 id=&quot;demo&quot;&gt;Demo&lt;/h3&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@ahihi:~# &lt;/span&gt;useradd -u 4000000000 wtf
&lt;span class=&quot;gp&quot;&gt;root@ahihi:~# &lt;/span&gt;su - wtf
No directory, logging &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;with &lt;span class=&quot;nv&quot;&gt;HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/

&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;whoami
wtf
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;id
&lt;span class=&quot;nv&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4000000000&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;wtf&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;gid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1002&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;wtf&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1002&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;wtf&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;systemctl stop sshd.service

&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;process:22860&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: GLib-GObject-WARNING &lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;: value &lt;span class=&quot;s2&quot;&gt;&quot;-294967296&quot;&lt;/span&gt; of &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'gint'&lt;/span&gt; is invalid or out of range &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;property &lt;span class=&quot;s1&quot;&gt;'uid'&lt;/span&gt; of &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'gint'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;
ERROR:pkttyagent.c:175:main: assertion failed: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;polkit_unix_process_get_uid &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;POLKIT_UNIX_PROCESS &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;subject&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;root@ahihi:~# &lt;/span&gt;systemctl status sshd.service
...
Dec 05 15:38:39 ahihi systemd[1]: Stopping OpenBSD Secure Shell server...
Dec 05 15:38:39 ahihi systemd[1]: Stopped OpenBSD Secure Shell server.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Wed, 05 Dec 2018 00:00:00 +0700</pubDate>
        <link>https://llnx.me/security/2018/12/05/Critial-vulnerability-on-policykit-of-systemd.html</link>
        <guid isPermaLink="true">https://llnx.me/security/2018/12/05/Critial-vulnerability-on-policykit-of-systemd.html</guid>
        
        
        <category>security</category>
        
      </item>
    
      <item>
        <title>Debian on android shell</title>
        <description>&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt;: I had one old Android phone, with broken touching/gesture layer. One day, I found it on a dirty old place.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;I wonder how can I make it better with more usability.&lt;/li&gt;
  &lt;li&gt;How can I make it work exactly as I needed.&lt;/li&gt;
  &lt;li&gt;How can I transform this old phone to a super tiny linux machine with interactive shell?&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Device: xiaomi Mi4W LTE, android 6.0.1 MMB29M
Specs: Qualcomm MSM8974PRO-AC Quad-core max 2.5GHz, 3.00 GB memory, 16GB disk
Kernel: 3.4.0-gf4b741d-00690-gc8911e
Arch: armv7l
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/android-shell.webp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;!--description--&gt;

&lt;h2 id=&quot;a-knowledge-base&quot;&gt;A. Knowledge base&lt;/h2&gt;

&lt;p&gt;For accessing default android shell, we need &lt;code class=&quot;highlighter-rouge&quot;&gt;adb&lt;/code&gt; tools. For booting operation with custom image, we use &lt;code class=&quot;highlighter-rouge&quot;&gt;fastboot&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;adb reboot recovery&lt;/code&gt;.
After accessing, with &lt;code class=&quot;highlighter-rouge&quot;&gt;twrp&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;supersu&lt;/code&gt; we can grant &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt; privileges because we need root permission for doing &lt;code class=&quot;highlighter-rouge&quot;&gt;mount&lt;/code&gt; filesystem and totally control the whole system.&lt;/p&gt;

&lt;p&gt;We also need &lt;code class=&quot;highlighter-rouge&quot;&gt;busybox&lt;/code&gt; for expanding utilities like editing files by &lt;code class=&quot;highlighter-rouge&quot;&gt;vi&lt;/code&gt;, checking network connection, …
It’s done for controlling android via &lt;code class=&quot;highlighter-rouge&quot;&gt;adb shell&lt;/code&gt;, but currently, linux os on android is designed for mobile, apk applications, everyday carry and easy to use for all kinds of users, also it’s not using any kind of package management like &lt;code class=&quot;highlighter-rouge&quot;&gt;apt&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;yum&lt;/code&gt;, I nearly can do nothing on current system.&lt;/p&gt;

&lt;p&gt;From devops/sre point of view, all I want is pushing/booting a fully &lt;code class=&quot;highlighter-rouge&quot;&gt;linux&lt;/code&gt; os to my android, that’s I can do more things on this, instead of limited android os.
I decided to use &lt;code class=&quot;highlighter-rouge&quot;&gt;debian stretch&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;debootrap&lt;/code&gt; for extract custom image and init debian filesystem via &lt;code class=&quot;highlighter-rouge&quot;&gt;chroot&lt;/code&gt; to current android &lt;code class=&quot;highlighter-rouge&quot;&gt;sdcard&lt;/code&gt; directory.&lt;/p&gt;

&lt;h2 id=&quot;b-hacking--practicing-zone&quot;&gt;B. Hacking / Practicing zone&lt;/h2&gt;

&lt;h3 id=&quot;1-install-adb-and-fastboot-tools-on-mac&quot;&gt;1. Install adb and fastboot tools on mac&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mac❯❯ brew cask install android-platform-tools

mac❯❯ adb --version
Android Debug Bridge version 1.0.40
Version 4797878
Installed as /usr/local/bin/adb

mac❯❯ fastboot --version
fastboot version 28.0.0-4797878
Installed as /usr/local/bin/fastboot

&lt;span class=&quot;c&quot;&gt;# Connect android to mac via usb &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Verify device&lt;/span&gt;

mac❯❯ adb devices -l
List of devices attached
1f703708  device usb:336592896X product:cancro_wc_lte model:MI_4W device:cancro transport_id:13
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;2-download-then-install-twrp--supersu-on-fastboot&quot;&gt;2. Download then install twrp &amp;amp; supersu on fastboot&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mac❯❯ wget internet.com/SR5-SuperSU-v2.82-SR5-20171001224502.zip ./
mac❯❯ wget internet.com/twrp-3.1.0-0-cancro.img ./
mac❯❯ adb push ./SR5-SuperSU-v2.82-SR5-20171001224502.zip /storage/self/primary/
SR5-SuperSU-v2.82-SR5-20171001224502.zip: 1 file pushed. 5.8 MB/s &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6882992 bytes &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;1.127s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

mac❯❯ adb reboot bootloader

mac❯❯ fastboot devices
1f703708	fastboot

mac❯❯ fastboot flash recovery ./twrp-3.1.0-0-cancro.img
Sending &lt;span class=&quot;s1&quot;&gt;'recovery'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;13682 KB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                      OKAY &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;  0.464s]
Writing &lt;span class=&quot;s1&quot;&gt;'recovery'&lt;/span&gt;                                 OKAY &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;  0.305s]
Finished. Total &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: 0.772s

mac❯❯ fastboot boot ./twrp-3.1.0-0-cancro.img
Downloading &lt;span class=&quot;s1&quot;&gt;'boot.img'&lt;/span&gt;                             OKAY &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;  0.432s]
booting                                            OKAY &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;  0.119s]
Finished. Total &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: 0.560s

&lt;span class=&quot;c&quot;&gt;# After booted into TWRP&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Install SR5-SuperSU-v2.82-SR5-20171001224502.zip from TWRP&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Do it on touch screen, or via twrp commandline&lt;/span&gt;

mac❯❯ adb shell 
android❯❯ twrp install /storage/self/primary/SR5-SuperSU-v2.82-SR5-20171001224502.zip
android❯❯ twrp wipe cache
android❯❯ reboot

&lt;span class=&quot;c&quot;&gt;# Verify root on device&lt;/span&gt;

mac❯❯ adb shell
shell@cancro:/ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su -
root@cancro:/ &lt;span class=&quot;c&quot;&gt;# whoami&lt;/span&gt;
root
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;3-expand-utilities-with-busybox&quot;&gt;3. Expand utilities with busybox&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mac❯❯ wget https://busybox.net/downloads/binaries/1.28.1-defconfig-multiarch/busybox-armv7l
mac❯❯ adb push busybox-armv7l /data/local/tmp
busybox-armv7l: 1 file pushed. 3.8 MB/s &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1079156 bytes &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.270s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

mac❯❯ adb shell
shell@cancro:/ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su -
root@cancro:/ &lt;span class=&quot;c&quot;&gt;# mkdir /data/busybox&lt;/span&gt;
root@cancro:/ &lt;span class=&quot;c&quot;&gt;# move /data/local/tmp/busybox-armv7l /data/busybox&lt;/span&gt;
root@cancro:/ &lt;span class=&quot;c&quot;&gt;# cd /data/busybox&lt;/span&gt;
root@cancro:/data/busybox &lt;span class=&quot;c&quot;&gt;# ls -l&lt;/span&gt;
-rwxrwxrwx shell    shell     1079156 2018-02-15 20:47 busybox-armv7l
root@cancro:/data/busybox &lt;span class=&quot;c&quot;&gt;# ./busybox-armv7l --install ./&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Use ls of busybox &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# instead of current ls on android&lt;/span&gt;

root@cancro:/ &lt;span class=&quot;c&quot;&gt;# which ls&lt;/span&gt;
/system/bin/ls

root@cancro:/ &lt;span class=&quot;c&quot;&gt;# export PATH=/data/busybox:$PATH&lt;/span&gt;
root@cancro:/ &lt;span class=&quot;c&quot;&gt;# which ls&lt;/span&gt;
/data/busybox/ls
root@cancro:/ &lt;span class=&quot;c&quot;&gt;# which vi&lt;/span&gt;
/data/busybox/vi
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;4-config--fix-env-variables-and-configuations&quot;&gt;4. Config / fix env variables and configuations&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Choose one: (for security mount /system back to RO when finished)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Mount system RW: mount -o rw,remount /system&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Mount system RO: mount -o ro,remount /system&lt;/span&gt;

root@cancro:/ &lt;span class=&quot;c&quot;&gt;# mount -o rw,remount /system&lt;/span&gt;
root@cancro:/ &lt;span class=&quot;c&quot;&gt;# vi /system/etc/mkshrc&lt;/span&gt;
...
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/data/busybox:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;when facing with su command like this, we need reconfigure su&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Issue with su command&lt;/span&gt;

shell@cancro:/ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su
su: must be suid to work properly

&lt;span class=&quot;c&quot;&gt;# Resolve&lt;/span&gt;

root@cancro:/ &lt;span class=&quot;c&quot;&gt;# cp /su/bin/su /data/busybox/su&lt;/span&gt;
root@cancro:/ &lt;span class=&quot;c&quot;&gt;# ls -lh /su/bin/su&lt;/span&gt;
-rwxr-xr-x    1 0        0          73.6K Sep 11 13:49 /su/bin/su
root@cancro:/ &lt;span class=&quot;c&quot;&gt;# ls -lh /data/busybox/su&lt;/span&gt;
-rwx------    1 0        0          73.6K Sep 11 15:58 /data/busybox/su
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;5-extract-debianimg-from-available-debian-system-not-bsd-os-like-mac&quot;&gt;5. Extract debian.img from available debian system (not BSD os like Mac)&lt;/h3&gt;

&lt;p&gt;Install debootstrap then bootstrapping debian stretch image for armv7l arch&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;debian❯❯ apt install -y debootstrap debian-archive-keyring debian-ports-archive-keyring
debian❯❯ mkdir debian-armhf
debian❯❯ &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;debian-armhf/
debian❯❯ dd &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/dev/zero &lt;span class=&quot;nv&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;debian.img &lt;span class=&quot;nv&quot;&gt;bs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1MiB &lt;span class=&quot;nv&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2000
debian❯❯ mke2fs -F debian.img
debian❯❯ mkdir debian
debian❯❯ mount -o loop debian.img debian
debian❯❯ debootstrap --arch armhf --foreign --verbose stretch debian http://ftp.us.debian.org/debian
debian❯❯ umount debian
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/debootstrap.webp&quot; alt=&quot;large-img&quot; title=&quot;Extract debian filesystem via Debootstrap&quot; /&gt;&lt;/p&gt;

&lt;p&gt;rsync file debian.img from debian system to mac system, then push this img to android&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mac❯❯ adb push debian.img /sdcard/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;6-debootstrapping-debian-into-android-os&quot;&gt;6. Debootstrapping debian into android os&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mac❯❯ adb shell

shell@cancro:/ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su -
root@cancro:/ &lt;span class=&quot;c&quot;&gt;# mkdir /sdcard/debian-stretch9&lt;/span&gt;
root@cancro:/ &lt;span class=&quot;c&quot;&gt;# losetup /dev/block/loop99 /sdcard/debian.img&lt;/span&gt;
root@cancro:/ &lt;span class=&quot;c&quot;&gt;# mount /dev/block/loop99 /sdcard/debian-stretch9&lt;/span&gt;
root@cancro:/ &lt;span class=&quot;c&quot;&gt;# chroot /sdcard/debian-stretch9 /bin/bash&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/bin:/usr/sbin:/bin:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TERM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;linux
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/root
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root
/debootstrap/debootstrap --second-stage

&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;nameserver 8.8.8.8&quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/resolv.conf
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;127.0.0.1 localhost&quot;&lt;/span&gt; &amp;gt; /etc/hosts
&lt;span class=&quot;nb&quot;&gt;exit

&lt;/span&gt;mac❯❯ adb shell
shell@cancro:/ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su -
root@cancro:/ &lt;span class=&quot;c&quot;&gt;# chroot /sdcard/debian-stretch9 /bin/su - root&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;root@localhost:~# &lt;/span&gt;whoami &lt;span class=&quot;c&quot;&gt;#should be root&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;root@localhost:~# &lt;/span&gt;cat /etc/debian_version &lt;span class=&quot;c&quot;&gt;#9.5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;7-complete-debian-os-with-apt-and-networking&quot;&gt;7. Complete debian os with apt and networking&lt;/h3&gt;
&lt;p&gt;From the first time, I cannot use &lt;code class=&quot;highlighter-rouge&quot;&gt;ping&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;apt&lt;/code&gt;, because Android uses a special Kernel patch that’s activated with &lt;code class=&quot;highlighter-rouge&quot;&gt;CONFIG_ANDROID_PARANOID_NETWORK&lt;/code&gt;. 
For adding specific groups, this patch allows network access to system users that belong to certain special groups with hardcoded IDs.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mac❯❯ adb shell
shell@cancro:/ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su -
root@cancro:/ &lt;span class=&quot;c&quot;&gt;# chroot /sdcard/debian-stretch9/ /bin/su - root&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;root@localhost:~# &lt;/span&gt;groupadd -g 3001 aid_bt
&lt;span class=&quot;gp&quot;&gt;root@localhost:~# &lt;/span&gt;groupadd -g 3002 aid_bt_net
&lt;span class=&quot;gp&quot;&gt;root@localhost:~# &lt;/span&gt;groupadd -g 3003 aid_inet
&lt;span class=&quot;gp&quot;&gt;root@localhost:~# &lt;/span&gt;groupadd -g 3004 aid_net_raw
&lt;span class=&quot;gp&quot;&gt;root@localhost:~# &lt;/span&gt;groupadd -g 3005 aid_admin
&lt;span class=&quot;gp&quot;&gt;root@localhost:~# &lt;/span&gt;usermod -a -G aid_bt,aid_bt_net,aid_inet,aid_net_raw,aid_admin root
&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; - relogin

&lt;span class=&quot;gp&quot;&gt;root@localhost:~# &lt;/span&gt;grep -E &lt;span class=&quot;s2&quot;&gt;&quot;_apt&quot;&lt;/span&gt; /etc/passwd
_apt:x:104:65534::/nonexistent:/bin/false

&lt;span class=&quot;gp&quot;&gt;root@localhost:~# &lt;/span&gt;usermod -g 3003 _apt
&lt;span class=&quot;gp&quot;&gt;root@localhost:~# &lt;/span&gt;grep -E &lt;span class=&quot;s2&quot;&gt;&quot;_apt&quot;&lt;/span&gt; /etc/passwd
_apt:x:104:3003::/nonexistent:/bin/false

&lt;span class=&quot;gp&quot;&gt;root@localhost:~# &lt;/span&gt;apt update
Ign:1 http://ftp.de.debian.org/pub/debian stable InRelease
Get:2 http://ftp.de.debian.org/pub/debian stable Release &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;118 kB]
...
Fetched 12.7 MB &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;36s &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;351 kB/s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Reading package lists... Done
Building dependency tree... Done
All packages are up to date.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;8-performance-benchmarking&quot;&gt;8. Performance benchmarking&lt;/h3&gt;
&lt;p&gt;…to be continue&lt;/p&gt;

&lt;h2 id=&quot;c-reference&quot;&gt;C. Reference&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.wikitechy.com/technology/how-to-root-and-install-twrp-recovery-on-xiaomi-mi4/&quot;&gt;TWRP fastboot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://android.stackexchange.com/questions/53389/can-i-update-the-adb-shells-environment-variables&quot;&gt;ADB shell environment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://android.stackexchange.com/questions/110927/how-to-mount-system-rewritable-or-read-only-rw-ro&quot;&gt;Mount /system RR&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://busybox.net/FAQ.html&quot;&gt;Busybox FAQ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cryptojedi.org/misc/nexuss-debian.shtml&quot;&gt;Debian on android&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/36451444/what-can-cause-a-socket-permission-denied-error&quot;&gt;Chroot on android&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 11 Sep 2018 00:00:00 +0700</pubDate>
        <link>https://llnx.me/technical/2018/09/11/Debian-on-android-shell.html</link>
        <guid isPermaLink="true">https://llnx.me/technical/2018/09/11/Debian-on-android-shell.html</guid>
        
        
        <category>technical</category>
        
      </item>
    
      <item>
        <title>Solving blaming game</title>
        <description>&lt;p&gt;&lt;strong&gt;Context&lt;/strong&gt;: stuck with problems, cannot find root cause, dunno and cannot understand and reproduce problem. Maybe feeling very tired for a long day, already taken 5 hours without any good executions. Maybe you don’t want to take responsibility for that.&lt;/p&gt;

&lt;p&gt;Introducing &lt;strong&gt;blaming&lt;/strong&gt;: the fine art of making others responsible for all the difficult things that happen to you.&lt;/p&gt;

&lt;p&gt;Nowadays, there are many many contexts &amp;amp; examples for blaming. I only want to wide the scope of this mindset, into SRE/Devops/Sysadmin fields. &lt;strong&gt;Why we blaming each others&lt;/strong&gt;, right or wrong? How can we fix/improve our mindset? &lt;strong&gt;How can we do better?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://imgs.xkcd.com/comics/blame_2x.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;!--description--&gt;

&lt;h2 id=&quot;1-real-life-example&quot;&gt;1. Real life example&lt;/h2&gt;

&lt;p&gt;Working on infras of someone else, working on services that not be built by ourself&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;many legacy/unknown components&lt;/li&gt;
  &lt;li&gt;bad naming &amp;amp; coding conventions&lt;/li&gt;
  &lt;li&gt;lack of resource inventory, lack of useful documents.&lt;/li&gt;
  &lt;li&gt;found bad lines of code from developers, but must solve that shitty issue.&lt;/li&gt;
  &lt;li&gt;found unacceptable implementations, like opened all ports, all protocols to 0.0.0.0/0 &lt;strong&gt;(WTF)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We start blaming others because they are bad, very bad&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Who did it?&lt;/li&gt;
  &lt;li&gt;Who’s the interviewer of that f*cker guy?&lt;/li&gt;
  &lt;li&gt;Hey man, you mad, go fuck yourself&lt;/li&gt;
  &lt;li&gt;Kick this man out please, I don’t want him in my team&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-reasons&quot;&gt;2. Reasons&lt;/h2&gt;

&lt;h3 id=&quot;a-badness&quot;&gt;a. Badness&lt;/h3&gt;

&lt;p&gt;We have a deep need for a sense of identity, and one way we do this is through social comparison, contrasting ourselves against others. 
If we can place ourselves higher in the pecking order of society then we can feel more important and have a greater sense of control.&lt;/p&gt;

&lt;p&gt;We seek a higher status than others. And blame is one of the tools we use to this end. If the other person is bad, then it seems &lt;strong&gt;we must be relatively good&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/xzMs8O1KQh17i/giphy.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;b-defending&quot;&gt;b. Defending&lt;/h3&gt;

&lt;p&gt;Maybe we’re &lt;strong&gt;scared&lt;/strong&gt; that we’re going to fall, because if our boss found this issue, we will be fire, or cannot have a higher salary. If we are not at fault, we &lt;strong&gt;blame to defend&lt;/strong&gt;. If we are at fault, then we &lt;strong&gt;blame to deflect&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/3o6vXSO55Ib7Tm4NLW/giphy.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;c-attacking&quot;&gt;c. Attacking&lt;/h3&gt;

&lt;p&gt;Sometimes we know the reasons of issues are most from our side, but also come from their side.
We want to blame others less because we are moving attention away from ourselves and more because we &lt;strong&gt;specifically want to attack others&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A common reason to attack others is that we have some grudge against them, believing them to be bad or unworthy in some way and hence deserving punishment. Perhaps they have blamed us unfairly in past. Maybe they have hurt one of our friends. In any case, the opportunity to blame is used as a convenient method of subtle attack.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/xT39D97sOyaJ8CJlD2/giphy.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-how-can-we-do-better&quot;&gt;3. How can we do better?&lt;/h2&gt;

&lt;p&gt;The keys aka solutions are &lt;strong&gt;NO BLAMING GAME&lt;/strong&gt; + &lt;strong&gt;JUST FIX THAT SHIT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You are good&lt;/strong&gt;, very good enough to know the bad (after taken 10 hours for finding rootcause)
Why don’t you sit down and plan to solve issues?
Calm down, breath, take a deep breath, let’s standup and take a coffee/tea cup, then relax your mind.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;I recommended that you should &lt;strong&gt;switch&lt;/strong&gt; your mindset from blaming others to &lt;strong&gt;thinking that you have a change to make things better&lt;/strong&gt;. You are here to do that, you have a change to show off your experiences (devops god, hero of all things)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Figure out the problem&lt;/strong&gt;, &lt;strong&gt;plan a hotfix&lt;/strong&gt;, write-up &amp;amp; share &lt;strong&gt;step-by-step&lt;/strong&gt;, guide the fucker to understand and &lt;strong&gt;how to find root cause&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Even the f*cker is developer or other junior devops/sysdmin. They are bad, lack of knowledge.
Your job is inspecting, finding, &lt;strong&gt;solving&lt;/strong&gt;, validating, auditing, &lt;strong&gt;not pointing the figure elsewhere.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Disclamer and question&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If you cannot solve issues, it means you don’t have enough permission and knowledge to blame. RIGHT?&lt;/li&gt;
  &lt;li&gt;Blaming or not blaming, at the end, issues still right there. Blaming is not solving problems.&lt;/li&gt;
  &lt;li&gt;Why dont we sit down then try to fix that shit?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://media.giphy.com/media/l4q8gzOgUQIy7Ml44/giphy.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://changingminds.org/explanations/behaviors/blame/why_blame_others.htm&quot;&gt;http://changingminds.org/explanations/behaviors/blame/why_blame_others.htm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.harleytherapy.co.uk/counselling/why-we-put-the-blame-on-others.htm&quot;&gt;https://www.harleytherapy.co.uk/counselling/why-we-put-the-blame-on-others.htm&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 25 Aug 2018 00:00:00 +0700</pubDate>
        <link>https://llnx.me/mindset/2018/08/25/Solving-blaming-game.html</link>
        <guid isPermaLink="true">https://llnx.me/mindset/2018/08/25/Solving-blaming-game.html</guid>
        
        
        <category>mindset</category>
        
      </item>
    
      <item>
        <title>Signal of linux</title>
        <description>&lt;h3 id=&quot;definition&quot;&gt;Definition:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;System calls: communication chanel between user space program and kernel&lt;/li&gt;
  &lt;li&gt;Signals: a different channel, used for inter-process communication&lt;/li&gt;
  &lt;li&gt;Signals don’t carry any agrgument, they are self explanatory by their name&lt;/li&gt;
  &lt;li&gt;Some signals identified by a number, ie &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGKILL&lt;/code&gt; (9)&lt;/li&gt;
  &lt;li&gt;That’s why we use &lt;code class=&quot;highlighter-rouge&quot;&gt;kill -9 &amp;lt;PID&amp;gt;&lt;/code&gt; to kill a process, because the kill command will send a defined signal to a process with a given identity &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;PID&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;when we run &lt;code class=&quot;highlighter-rouge&quot;&gt;kill -9 &amp;lt;PID&amp;gt;&lt;/code&gt; command, that process is not terminate itself, instead we’re telling that OS to stop running the program, no matter what the program is doing&lt;/li&gt;
&lt;/ul&gt;

&lt;!--description--&gt;

&lt;h3 id=&quot;some-useful-signals&quot;&gt;Some useful signals&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SIGINT&lt;/code&gt;: is the program interrupt signal. When user presses &lt;code class=&quot;highlighter-rouge&quot;&gt;CTRL+C&lt;/code&gt;, the terminal emulator sends this signal to the foreground process, it will terminate process, but it can be caught or ignored, it a graceful shutdown&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SIGTERM&lt;/code&gt;: is the termination signal. It used to cause process termination, this signal can be blocked, handled and ignored. It is the normal way to ask a process to terminate. The &lt;code class=&quot;highlighter-rouge&quot;&gt;kill&lt;/code&gt; command generates SIGTERM by default&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SIGKILL&lt;/code&gt;: is an immediate termination signal. It cannot be caught or ignored by the process, because when we send a &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGKILL&lt;/code&gt; to a proces, we remove any chance for that process to do a tidy cleanup and shutdown.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example, when a process does not die by using &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl+C&lt;/code&gt; (SIGINT), we should use the command &lt;code class=&quot;highlighter-rouge&quot;&gt;kill -9&lt;/code&gt; on that process PID&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SIGSTOP&lt;/code&gt;: is a process suspend signal, which tells the OS to stop/suspend a process. This signal cannot be caught or ignored. To resume the process, use SIGCONT signal to continue&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl+C&lt;/code&gt;: The interrupt signal, sends &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGINT&lt;/code&gt; to the job running in the foreground.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When a process is in a limbo state it is reasonable to send the process the &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGKILL&lt;/code&gt; signal, which can be invoked by running the kill command with the -9 flag. Unlike &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGTERM&lt;/code&gt; the &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGKILL&lt;/code&gt; signal cannot be captured by the process and thus it cannot be ignored. The &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGKILL&lt;/code&gt; signal is handled outside of the process completely, and is used to stop the process immediately. The problem with using &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGKILL&lt;/code&gt; is that it does not allow an application to close its open files or database connections cleanly and over time could cause other issues; therefor it is generally better to reserve the &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGKILL&lt;/code&gt; signal as a last resort.&lt;/p&gt;

&lt;h3 id=&quot;reference--read-more&quot;&gt;Reference &amp;amp; Read more&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;http://bencane.com/2014/04/01/understanding-the-kill-command-and-how-to-terminate-processes-in-linux/&lt;/li&gt;
  &lt;li&gt;https://en.wikipedia.org/wiki/Unix_signal&lt;/li&gt;
  &lt;li&gt;http://unix.stackexchange.com/questions/149741/why-is-sigint-not-propagated-to-child-process-when-sent-to-its-parent-process&lt;/li&gt;
  &lt;li&gt;http://askubuntu.com/questions/890591/why-doesnt-ctrl-c-kill-the-terminal-itself/890597&lt;/li&gt;
  &lt;li&gt;https://www.shellscript.sh/&lt;/li&gt;
  &lt;li&gt;https://www.win.tue.nl/~aeb/linux/lk/lk-5.html&lt;/li&gt;
  &lt;li&gt;https://lasr.cs.ucla.edu/vahab/resources/signals.html&lt;/li&gt;
  &lt;li&gt;http://www.linuxprogrammingblog.com/all-about-linux-signals?page=show&lt;/li&gt;
  &lt;li&gt;ftp://ftp.gnu.org/old-gnu/Manuals/glibc-2.2.3/html_chapter/libc_24.html&lt;/li&gt;
  &lt;li&gt;http://askubuntu.com/questions/184071/what-is-the-purpose-of-the-9-option-in-the-kill-command&lt;/li&gt;
  &lt;li&gt;https://www.digitalocean.com/community/tutorials/how-to-use-ps-kill-and-nice-to-manage-processes-in-linux&lt;/li&gt;
  &lt;li&gt;https://s905060.gitbooks.io/site-reliability-engineer-handbook/content/signals.html&lt;/li&gt;
  &lt;li&gt;http://bencane.com/2014/04/01/understanding-the-kill-command-and-how-to-terminate-processes-in-linux/&lt;/li&gt;
  &lt;li&gt;https://major.io/2010/03/18/sigterm-vs-sigkill/&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Wed, 15 Aug 2018 00:00:00 +0700</pubDate>
        <link>https://llnx.me/technical/2018/08/15/Signal-of-linux.html</link>
        <guid isPermaLink="true">https://llnx.me/technical/2018/08/15/Signal-of-linux.html</guid>
        
        
        <category>technical</category>
        
      </item>
    
      <item>
        <title>Learning logs in Aug</title>
        <description>&lt;ol&gt;
  &lt;li&gt;Export large tables in MySQL&lt;/li&gt;
  &lt;li&gt;Bash completion on debian 9&lt;/li&gt;
&lt;/ol&gt;

&lt;!--description--&gt;

&lt;h3 id=&quot;1-export-large-tables-in-mysql&quot;&gt;1. Export large tables in MySQL&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Large tables&lt;/li&gt;
  &lt;li&gt;Progress&lt;/li&gt;
  &lt;li&gt;Compression&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tmux new -s exporting
mysqldump -udevops -pxxxxxx -hhost.xxxx \
           dbname table1 table2 table3 | pv | gzip -9 &amp;gt; 3tables.sql.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;2-bash-completion-on-debian-9&quot;&gt;2. Bash completion on debian 9&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Autocomplete / hint when pressing tab&lt;/li&gt;
  &lt;li&gt;Apply for all user/profile&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt install bash-completion

# In file /etc/profile
if [ -f /etc/bash_completion ]; then
 . /etc/bash_completion
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/21091197/5402121&quot;&gt;https://stackoverflow.com/a/21091197/5402121&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://packages.debian.org/stretch/bash-completion&quot;&gt;https://packages.debian.org/stretch/bash-completion&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 06 Aug 2018 00:00:00 +0700</pubDate>
        <link>https://llnx.me/today-i-learned/2018/08/06/Learning-logs-in-Aug.html</link>
        <guid isPermaLink="true">https://llnx.me/today-i-learned/2018/08/06/Learning-logs-in-Aug.html</guid>
        
        
        <category>today-i-learned</category>
        
      </item>
    
      <item>
        <title>RDS as-a-fckin-service</title>
        <description>&lt;p&gt;&lt;strong&gt;AWS RDS document&lt;/strong&gt;: 
Depending on the DB instance class and the amount of storage, it can take up to 20 minutes before the new instance is available.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reality&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;RDB instance status: creating&lt;/li&gt;
  &lt;li&gt;RDS stuck in this fucking step nearly 2 hours and couting&lt;/li&gt;
  &lt;li&gt;db-fuck-as-a-service&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/rds.webp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;!--description--&gt;

&lt;h3 id=&quot;i-guest-aka-initiation-step-by-step&quot;&gt;I guest aka initiation step-by-step&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Somehow the init RDB button will trigger a form with all specs, then send sms directly to a fucking devops guy of AWS ;)))&lt;/li&gt;
  &lt;li&gt;Then that guy will goto AWS console, init new EC2 manually by his hand, use &lt;code class=&quot;highlighter-rouge&quot;&gt;rds-fucking-root.pem&lt;/code&gt; keypairs&lt;/li&gt;
  &lt;li&gt;YEAH, then then then pick &lt;code class=&quot;highlighter-rouge&quot;&gt;ansible-playbook&lt;/code&gt; from somewhere in the internet then run this fuck&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;AND NOW: we have super-HA-scalable-db-as-a-service behind RDS term&lt;/p&gt;

&lt;p&gt;Fact (trustme): nslookup of RDS domain, it will result EC2 domains&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_GettingStarted.CreatingConnecting.MySQL.html&quot;&gt;https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_GettingStarted.CreatingConnecting.MySQL.html&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Jul 2018 00:00:00 +0700</pubDate>
        <link>https://llnx.me/technical/2018/07/24/RDS-as-a-fckin-service.html</link>
        <guid isPermaLink="true">https://llnx.me/technical/2018/07/24/RDS-as-a-fckin-service.html</guid>
        
        
        <category>technical</category>
        
      </item>
    
      <item>
        <title>Mindset for building HA and scalable system</title>
        <description>&lt;p&gt;&lt;strong&gt;System or infrastructure must have&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Fault tolerance&lt;/li&gt;
  &lt;li&gt;No single point of failure&lt;/li&gt;
  &lt;li&gt;More than one or two security layers&lt;/li&gt;
  &lt;li&gt;Auto-failover without requiring human intervention&lt;/li&gt;
  &lt;li&gt;Heartbeat monitoring on all running components&lt;/li&gt;
  &lt;li&gt;Infrastructure as code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/port-k8s.webp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;!--description--&gt;

&lt;h3 id=&quot;fault-tolerance&quot;&gt;Fault tolerance&lt;/h3&gt;
&lt;p&gt;It is the property that enables a system to &lt;strong&gt;continue operating&lt;/strong&gt; properly in the event of the &lt;strong&gt;failure&lt;/strong&gt; of (or one or more faults within) some of its &lt;strong&gt;components&lt;/strong&gt;. If its operating quality decreases at all, the decrease is proportional to the severity of the failure, as compared to a naively designed system in which even a small failure can cause total breakdown. Fault tolerance is particularly sought after in high-availability or life-critical systems.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Distributed read/write to MySQL replication cluster&lt;/li&gt;
  &lt;li&gt;CDN system like Cloudfront/Cloudflare&lt;/li&gt;
  &lt;li&gt;Micro-services, seperated databases for some big components&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;single-point-of-failure&quot;&gt;Single point of failure&lt;/h3&gt;
&lt;p&gt;A single point of failure (SPOF) is a &lt;strong&gt;part of a system&lt;/strong&gt; that, &lt;strong&gt;if it fails&lt;/strong&gt;, will &lt;strong&gt;stop the entire system&lt;/strong&gt; from working. SPOFs are undesirable in any system with a goal of high availability or reliability, be it a business practice, software application, or other industrial system.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MySQL multi-master - galera cluster&lt;/li&gt;
  &lt;li&gt;AWS RDS multi-AZ feature&lt;/li&gt;
  &lt;li&gt;Elasticsearch master nodes&lt;/li&gt;
  &lt;li&gt;Redis sentinel&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;defense-in-depth&quot;&gt;Defense in depth&lt;/h3&gt;
&lt;p&gt;Defense in depth (also known as Castle Approach) is an information assurance (IA) concept in which &lt;strong&gt;multiple layers of security controls&lt;/strong&gt; (defense) are placed throughout an information technology (IT) system. Its intent is to provide redundancy in the event a security control fails or a vulnerability is exploited that can cover aspects of personnel, procedural, technical and physical for the duration of the system’s life cycle.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cloudflare Anti DDOS layer&lt;/li&gt;
  &lt;li&gt;IPtable / AWS secgroup&lt;/li&gt;
  &lt;li&gt;VPN&lt;/li&gt;
  &lt;li&gt;Snort / Ossec&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;failover&quot;&gt;Failover&lt;/h3&gt;
&lt;p&gt;A method of protecting computer systems from failure, in which &lt;strong&gt;standby equipment automatically takes over when the main system fails&lt;/strong&gt;. In computing, failover is switching to a redundant or standby computer server, system, hardware component or network upon the failure or abnormal termination of the previously active application, server, system, hardware component, or network. Failover and switchover are essentially the same operation, except that failover is automatic and usually operates without warning, while &lt;strong&gt;switchover requires human intervention&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HAproxy / AWS ALB &amp;amp; ELB&lt;/li&gt;
  &lt;li&gt;Auto promote on MySQL replication&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;heartbeat&quot;&gt;Heartbeat&lt;/h3&gt;
&lt;p&gt;In computer science, a heartbeat is a &lt;strong&gt;periodic signal&lt;/strong&gt; generated by hardware or software to &lt;strong&gt;indicate normal operation or to synchronize&lt;/strong&gt; other parts of a computer system. Usually a heartbeat is &lt;strong&gt;sent between machines&lt;/strong&gt; at a regular interval in the order of seconds. If the endpoint does &lt;strong&gt;not receive a heartbeat&lt;/strong&gt; for a time —usually a few heartbeat intervals—, the machine that should have sent the heartbeat is &lt;strong&gt;assumed to have failed&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Uptime tools (Monit, Newrelic synthetics, AWS LB healh-check)&lt;/li&gt;
  &lt;li&gt;Percona pt-heartbeat&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;infrastructure-as-code&quot;&gt;Infrastructure as code&lt;/h3&gt;
&lt;p&gt;All configuration is defined in executable configuration definition files, such as shell scripts, Ansible playbooks, Chef recipes, or Puppet manifests …&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Infra &amp;amp; network layer: Terraform, Cloudformation&lt;/li&gt;
  &lt;li&gt;Application layer: Ansible playbook, Puppet, Chef, Salt stack&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Fault_tolerance&quot;&gt;https://en.wikipedia.org/wiki/Fault_tolerance&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Single_point_of_failure&quot;&gt;https://en.wikipedia.org/wiki/Single_point_of_failure&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Defense_in_depth_(computing)&quot;&gt;https://en.wikipedia.org/wiki/Defense_in_depth_(computing)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Failover&quot;&gt;https://en.wikipedia.org/wiki/Failover&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Infrastructure_as_Code&quot;&gt;https://en.wikipedia.org/wiki/Infrastructure_as_Code&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 18 Jul 2018 00:00:00 +0700</pubDate>
        <link>https://llnx.me/technical/2018/07/18/Mindset-for-building-HA-system.html</link>
        <guid isPermaLink="true">https://llnx.me/technical/2018/07/18/Mindset-for-building-HA-system.html</guid>
        
        
        <category>technical</category>
        
      </item>
    
      <item>
        <title>Increase EBS volume of AWS on linux</title>
        <description>&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;A disk volume 32GB &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/xvdf1&lt;/code&gt; is mounted into &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/lib/mysql&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;This volume is out of space, need to be extend size to 64GB&lt;/li&gt;
  &lt;li&gt;Extended to 64GB on aws console, but from ec2 point of view, it’s just 32GB&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Rootcause&lt;/code&gt;&lt;/strong&gt;: didn’t merge partition after extending and resize fs&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/ebs-aws.webp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;!--description--&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;

&lt;p&gt;Resize file system to larger size of this volume&lt;/p&gt;

&lt;h3 id=&quot;step1-collect-information&quot;&gt;Step1: Collect information&lt;/h3&gt;

&lt;p&gt;Check disk ID&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@webapp-unstable:~# &lt;/span&gt;blkid
/dev/xvda1: &lt;span class=&quot;nv&quot;&gt;LABEL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cloudimg-rootfs&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;UUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;4573eb39-57f3-439b-9a73-8aef508afd3f&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ext4&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;PARTUUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;965243d6-01&quot;&lt;/span&gt;
/dev/xvdf1: &lt;span class=&quot;nv&quot;&gt;UUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;d56d3b3e-4385-48a7-ba95-6d3884d5dca8&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ext4&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;PARTUUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cc52698e-01&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Check size disk and mount point of &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/xvdf1&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@webapp-unstable:~# &lt;/span&gt;lsblk
NAME    MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
xvda    202:0    0  16G  0 disk
└─xvda1 202:1    0  16G  0 part /
xvdf    202:80   0  64G  0 disk
└─xvdf1 202:81   0  32G  0 part /var/lib/mysql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;step-2-unmount-this-volume-out-of-system&quot;&gt;Step 2: Unmount this volume out of system&lt;/h3&gt;

&lt;p&gt;Unmount&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@webapp-unstable:~# &lt;/span&gt;umount /dev/xvdf1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Check after unmount&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@webapp-unstable:~# &lt;/span&gt;lsblk
NAME    MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
xvda    202:0    0  16G  0 disk
└─xvda1 202:1    0  16G  0 part /
xvdf    202:80   0  64G  0 disk
└─xvdf1 202:81   0  32G  0 part
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;step-3-delete-and-recreate-new-partition&quot;&gt;Step 3: Delete and recreate new partition&lt;/h3&gt;

&lt;p&gt;Why? Because old partition is using 32GB only, should delete and re-create new one. After that, the new one will use all of space 64GB&lt;/p&gt;

&lt;p&gt;Using &lt;code class=&quot;highlighter-rouge&quot;&gt;fdisk&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;parted/gparted&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@webapp-unstable:~# &lt;/span&gt;fdisk /dev/xvdf

Welcome to fdisk &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;util-linux 2.27.1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.
Changes will remain &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;memory only, &lt;span class=&quot;k&quot;&gt;until &lt;/span&gt;you decide to write them.
Be careful before using the write command.


Command &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;m &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: p
Disk /dev/xvdf: 64 GiB, 68719476736 bytes, 134217728 sectors
Units: sectors of 1 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; 512 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 512 bytes
Sector size &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;logical/physical&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: 512 bytes / 512 bytes
I/O size &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;minimum/optimal&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: 512 bytes / 512 bytes
Disklabel &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: dos
Disk identifier: 0xcc52698e

Device     Boot Start      End  Sectors Size Id Type
/dev/xvdf1       2048 67108863 67106816  32G 83 Linux

Command &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;m &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: d
Selected partition 1
Partition 1 has been deleted.

Command &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;m &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: n
Partition &lt;span class=&quot;nb&quot;&gt;type
   &lt;/span&gt;p   primary &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0 primary, 0 extended, 4 free&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   e   extended &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;container &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;logical partitions&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Select &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default p&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: p
Partition number &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1-4, default 1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
First sector &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2048-134217727, default 2048&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
Last sector, +sectors or +size&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;K,M,G,T,P&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2048-134217727, default 134217727&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:

Created a new partition 1 of &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Linux'&lt;/span&gt; and of size 64 GiB.

Command &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;m &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: p
Disk /dev/xvdf: 64 GiB, 68719476736 bytes, 134217728 sectors
Units: sectors of 1 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; 512 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 512 bytes
Sector size &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;logical/physical&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: 512 bytes / 512 bytes
I/O size &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;minimum/optimal&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: 512 bytes / 512 bytes
Disklabel &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: dos
Disk identifier: 0xcc52698e

Device     Boot Start       End   Sectors Size Id Type
/dev/xvdf1       2048 134217727 134215680  64G 83 Linux

Command &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;m &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: w
The partition table has been altered.
Calling ioctl&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; to re-read partition table.
Syncing disks.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;step-4-resize-file-system-of-this-volume&quot;&gt;Step 4: Resize file system of this volume&lt;/h3&gt;

&lt;p&gt;Using &lt;code class=&quot;highlighter-rouge&quot;&gt;resize2fs&lt;/code&gt; because this volume is &lt;code class=&quot;highlighter-rouge&quot;&gt;ext4&lt;/code&gt; format&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@webapp-unstable:~# &lt;/span&gt;resize2fs /dev/xvdf1
resize2fs 1.42.13 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;17-May-2015&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Filesystem at /dev/xvdf1 is mounted on /var/lib/mysql; on-line resizing required
old_desc_blocks &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 2, new_desc_blocks &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 4
The filesystem on /dev/xvdf1 is now 16776960 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4k&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; blocks long.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Check after resizing&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@webapp-unstable:~# &lt;/span&gt;lsblk
NAME    MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
xvda    202:0    0  16G  0 disk
└─xvda1 202:1    0  16G  0 part /
xvdf    202:80   0  64G  0 disk
└─xvdf1 202:81   0  64G  0 part /var/lib/mysql
&lt;span class=&quot;gp&quot;&gt;root@webapp-unstable:~# &lt;/span&gt;df -h
Filesystem      Size  Used Avail Use% Mounted on
udev            2.0G     0  2.0G   0% /dev
tmpfs           396M   41M  355M  11% /run
/dev/xvda1       16G  6.9G  8.6G  45% /
tmpfs           2.0G     0  2.0G   0% /dev/shm
tmpfs           5.0M     0  5.0M   0% /run/lock
tmpfs           2.0G     0  2.0G   0% /sys/fs/cgroup
tmpfs           396M     0  396M   0% /run/user/1000
/dev/xvdf1       63G   30G   31G  50% /var/lib/mysql

&lt;span class=&quot;gp&quot;&gt;root@webapp-unstable:~# &lt;/span&gt;mount -fav
/                        : ignored
/var/lib/mysql           : already mounted
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;DONE.&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html&quot;&gt;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recognize-expanded-volume-linux.html&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 14 Dec 2017 00:00:00 +0700</pubDate>
        <link>https://llnx.me/technical/2017/12/14/Increase-EBS-volume.html</link>
        <guid isPermaLink="true">https://llnx.me/technical/2017/12/14/Increase-EBS-volume.html</guid>
        
        
        <category>technical</category>
        
      </item>
    
      <item>
        <title>Understanding top command</title>
        <description>&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;#understanding-top-command&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; is a monitoring program which is used frequently for tracking process’s resource usage and its activity in &lt;strong&gt;real-time&lt;/strong&gt;, show current tasks being serviced by the kernel, help &lt;strong&gt;discovering&lt;/strong&gt; and &lt;strong&gt;diagnosing&lt;/strong&gt; overload or capacity of system by seeing &lt;strong&gt;CPU &amp;amp; Mem usage&lt;/strong&gt;. It’s available under many Unix/Linux operating systems.&lt;/p&gt;

&lt;p&gt;Keyword: &lt;a href=&quot;/technical/2017/07/16/Understanding-top-command.html#understanding-top-command&quot;&gt;top&lt;/a&gt;, 
         &lt;a href=&quot;/technical/2017/07/16/Understanding-top-command.html#1-date-and-uptime&quot;&gt;uptime&lt;/a&gt;, 
         &lt;a href=&quot;/technical/2017/07/16/Understanding-top-command.html#2-number-of-logged-users&quot;&gt;users&lt;/a&gt;, 
         &lt;a href=&quot;/technical/2017/07/16/Understanding-top-command.html#3-load-average&quot;&gt;load average&lt;/a&gt;,
         &lt;a href=&quot;/technical/2017/07/16/Understanding-top-command.html#4-processthread-state&quot;&gt;process/thread state&lt;/a&gt;,
         &lt;a href=&quot;/technical/2017/07/16/Understanding-top-command.html#5-cpu-organization-and-operation&quot;&gt;CPU operation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/top-command-optimized.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;!--description--&gt;

&lt;h2 id=&quot;description-from-man-page&quot;&gt;Description from man page:&lt;/h2&gt;
&lt;p&gt;The top program provides a dynamic real-time view of a running system. It can display system summary information as well as a list of processes or threads currently being managed by the Linux kernel. The types of system summary information shown and the types order and size of information displayed for processes are all user configurable and that configuration can be  made persistent across restarts.&lt;/p&gt;

&lt;p&gt;The program provides a limited interactive interface for process manipulation as well as a much more extensive interface for personal configuration - encompassing every aspect of its operation. And while top is referred to throughout this document, you are free to name the program anything you wish. That new name, possibly an alias, will then be reflected on top’s display and used when reading and writing a configuration file. …&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;❯❯ Need more?&lt;/strong&gt; See &lt;a href=&quot;http://man7.org/linux/man-pages/man1/top.1.html&quot;&gt;http://man7.org/linux/man-pages/man1/top.1.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But it’s too fucking long 💢 and want to see the whole picture? 🌟 Sure, I have a picture below&lt;/p&gt;

&lt;h2 id=&quot;understanding-top-command&quot;&gt;Understanding top command&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/top-command.webp&quot; alt=&quot;large-img&quot; title=&quot;Top command explaination&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-date-and-uptime&quot;&gt;1. Date and uptime&lt;/h3&gt;
&lt;p&gt;Current time is &lt;strong&gt;13:41&lt;/strong&gt;, and system has been running for over &lt;strong&gt;5 weeks&lt;/strong&gt;, from last boot on &lt;strong&gt;May 17&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;top - 13:41:31 up 38 days, 21:04,  3 users,  load average: 0.01, 0.09, 0.13
❯❯ date
Sun Jun 25 13:41:31 UTC 2017
❯❯ uptime
13:41:31 up 38 days, 21:04,  3 users,  load average: 0.01, 0.09, 0.13
❯❯ uptime -p
up 5 weeks, 3 days, 21 hours, 6 minutes
❯❯ uptime -s
2017-05-17 16:37:26
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;2-number-of-logged-users&quot;&gt;2. Number of logged users&lt;/h3&gt;
&lt;p&gt;I have 3 logged users and what they are doing:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;one is running ssh to other&lt;/li&gt;
  &lt;li&gt;one is on bash shell&lt;/li&gt;
  &lt;li&gt;and … me with &lt;code class=&quot;highlighter-rouge&quot;&gt;w&lt;/code&gt; command&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3 users
❯❯ w
 13:41:31 up 38 days, 21:04,  3 users,  load average: 0.00, 0.01, 0.05
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
ubuntu   pts/0    x.205.x.xxx      13:09    1:34   0.07s  0.03s ssh abc.xyz
ubuntu   pts/3    x.64.xx.xxx      05:11    8:36m  0.05s  0.01s -bash
ubuntu   pts/6    x.161.x.xxx      13:47    3.00s  0.04s  0.00s w
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;3-load-average&quot;&gt;3. Load average&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;load average&lt;/code&gt;&lt;/strong&gt; is a number corresponding to the average number of &lt;strong&gt;runnable processes&lt;/strong&gt; on the system. The load average is often listed as three sets of numbers, which represent the load average for the past 1, 5, and 15 minutes. - from &lt;a href=&quot;https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/4/html/Introduction_To_System_Administration/s2-bandwidth-rhlspec-cpu.html&quot;&gt;RedHat&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On Linux systems, these numbers include &lt;strong&gt;processes wanting to run on CPU&lt;/strong&gt;, as well as processes blocked in uninterruptible I/O (usually disk I/O). This gives a high level idea of &lt;strong&gt;resource load&lt;/strong&gt; (or demand). The three numbers give us some idea of &lt;strong&gt;how load is changing over time&lt;/strong&gt;. For example, if you’ve been asked to check a problem server, and the 1 minute value is much lower than the 15 minute value, then you might have logged in too late and missed the issue - from &lt;a href=&quot;https://medium.com/netflix-techblog/linux-performance-analysis-in-60-000-milliseconds-accc10403c55&quot;&gt;Netfilx Techblog&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Runable processes&lt;/code&gt;&lt;/strong&gt; means: running and blocked processes (usually by I/O). That’s really important because it means that you can have &lt;code class=&quot;highlighter-rouge&quot;&gt;0% CPU usage&lt;/code&gt; and still have &lt;code class=&quot;highlighter-rouge&quot;&gt;high load&lt;/code&gt;. The processes blocked on I/O show up in the “&lt;strong&gt;D&lt;/strong&gt;” state in &lt;code class=&quot;highlighter-rouge&quot;&gt;ps&lt;/code&gt;, header “STAT” or “S”&lt;/p&gt;

&lt;p&gt;Lower numbers are better than higher numbers. If the third number is &lt;strong&gt;too high&lt;/strong&gt; (15 minutes ago), I think we got a problem about the performance to deal with. But what’s the &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Threshold&lt;/code&gt;&lt;/strong&gt;, what’s too high. We need a reasonable and &lt;strong&gt;acceptable value&lt;/strong&gt; for comparison.&lt;/p&gt;

&lt;h4 id=&quot;31-single-logical-cpu&quot;&gt;3.1 Single logical CPU&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;In general&lt;/strong&gt;, with &lt;code class=&quot;highlighter-rouge&quot;&gt;one logical CPU&lt;/code&gt; - 1 vCPU, &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Threshold = 0.7&lt;/code&gt;&lt;/strong&gt; is a best practice, many sysadmins will draw a line at 0.70.&lt;/p&gt;

&lt;p&gt;For example in case of 1 vCPU:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;load average: 1.25, 0.60, 4.20
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;over the last 1 minute: System was overloaded by &lt;code class=&quot;highlighter-rouge&quot;&gt;25% on average&lt;/code&gt;. 0.25 processes were waiting for the CPU&lt;/li&gt;
  &lt;li&gt;over the last 5 minutes: CPU &lt;code class=&quot;highlighter-rouge&quot;&gt;idled for 40%&lt;/code&gt; of the time. &lt;strong&gt;It’s acceptable&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;over the last 15 minutes: System was &lt;code class=&quot;highlighter-rouge&quot;&gt;overloaded by 320%&lt;/code&gt; on average. 3.20 processes were waiting for the CPU.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;32--multi-logical-cpus&quot;&gt;3.2  Multi-logical CPUs&lt;/h4&gt;
&lt;p&gt;With 4 logical CPUs system? It’s still healthy with a load of 2.80 - 3.00. On multi-logical CPUs system, the load is relative to the number of vCPUs available.&lt;/p&gt;

&lt;p&gt;The “100% utilization” mark is 1.00 on a single-logical CPU system, 2.00, on a dual vCPUs, 4.00 on a quad-vCPUs, etc.&lt;/p&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt; command, press &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; for each vCPU is displayed seperately, also to know number of vCPU.
I have 4 vCPUs in this case, using EC2 AWS C4 type, low load average&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;top - 09:10:00 up 32 days, 6 min,  2 users,  load average: 0.01, 0.04, 0.05
Tasks: 125 total,   1 running, 124 sleeping,   0 stopped,   0 zombie
%Cpu0  :  0.7 us,  0.0 sy,  0.0 ni, 99.3 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
%Cpu1  :  0.0 us,  0.3 sy,  0.0 ni, 99.7 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
%Cpu2  :  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
%Cpu3  :  5.0 us,  0.3 sy,  0.0 ni, 94.6 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Something more:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;💢 &lt;strong&gt;Confusing&lt;/strong&gt; about vCPUs/cores/threads - See &lt;a href=&quot;https://github.com/hieuhtr/Blog/issues/55&quot;&gt;CPU Architecture fundamental&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;🌟 For &lt;strong&gt;deep understanding&lt;/strong&gt; about load average - See &lt;a href=&quot;http://blog.scoutapp.com/articles/2009/07/31/understanding-load-averages&quot;&gt;this post&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;🌟 For another example - See &lt;a href=&quot;https://en.wikipedia.org/wiki/Load_%28computing%29#Unix-style_load_calculation&quot;&gt;wiki&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;🌟 Case: High load average but low CPU ultilization - See &lt;a href=&quot;https://www.pitt-pladdy.com/blog/_20150829-125708_0100_Linux_performance_metric_myths_Load_Average_IO_Wait_/&quot;&gt;this post&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4-processthread-state&quot;&gt;4. Process/Thread state&lt;/h3&gt;
&lt;p&gt;Let’s focus on &lt;strong&gt;Area1&lt;/strong&gt; in that &lt;a href=&quot;/technical/2017/07/16/Understanding-top-command.html#understanding-top-command&quot;&gt;overview picture&lt;/a&gt; above. In that top area, &lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt; shows the total number of processes and how many of them are running. But it says &lt;strong&gt;Tasks&lt;/strong&gt; not &lt;strong&gt;Processes&lt;/strong&gt;. Because another name for a process is a task. The Linux kernel internally refers to processes as tasks.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Tasks: 283 total,   1 running, 282 sleeping,   0 stopped,   0 zombie
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;From the time a process is born to when it is terminated, the process proceeds through various states. Those states can include &lt;strong&gt;Runnable&lt;/strong&gt;, &lt;strong&gt;Running&lt;/strong&gt;, &lt;strong&gt;Sleeping&lt;/strong&gt; (in memory and on disk), and &lt;strong&gt;Zombie&lt;/strong&gt; states - from &lt;a href=&quot;https://access.redhat.com/sites/default/files/attachments/processstates_20120831.pdf&quot;&gt;Redhat&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/process-state.webp&quot; alt=&quot;&quot; title=&quot;Process state life cycle&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;41-runable-state&quot;&gt;4.1 Runable state&lt;/h4&gt;
&lt;p&gt;When a process is in a Runnable state, it means it has all the resources it needs to run, except that the CPU
is not available.&lt;/p&gt;

&lt;p&gt;For example: A process is dealing with I/O, so it does not immediately need the CPU,  when the process finishes the I/O operation, a signal is generated to the CPU and the scheduler keeps that process in the run queue (the list of ready-to-run processes maintained by the kernel) - &lt;strong&gt;Runable&lt;/strong&gt;. When the CPU is available, this process will enter into &lt;strong&gt;Running&lt;/strong&gt; state&lt;/p&gt;

&lt;h4 id=&quot;42-running-state&quot;&gt;4.2 Running state&lt;/h4&gt;
&lt;p&gt;The process that is executing and using the CPU at a particular moment is called a &lt;strong&gt;Running&lt;/strong&gt; process.&lt;/p&gt;

&lt;p&gt;A CPU can execute either in kernel mode (sy) or in user mode (us). When a user initiates a process, the process starts working in user mode. That user mode process does not have access to kernel data structures or algorithms. Each CPU type provides special instructions to switch from user mode to kernel mode - they’re &lt;strong&gt;system calls&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;System calls&lt;/strong&gt;: communication chanel between user space program and kernel&lt;/p&gt;

&lt;h4 id=&quot;43-sleeping-state&quot;&gt;4.3 Sleeping state&lt;/h4&gt;
&lt;p&gt;A process enters a &lt;strong&gt;Sleeping&lt;/strong&gt; state when it needs resources that are not currently available. At that point, it either goes voluntarily into Sleep state or the kernel puts it into Sleep state. Going into Sleep state means the process immediately gives up its access to the CPU.&lt;/p&gt;

&lt;p&gt;When the resource the process is waiting on becomes available, a signal is sent to the CPU. The next time the scheduler gets a chance to schedule this sleeping process, the scheduler will put the process either in Running or Runnable state&lt;/p&gt;

&lt;h4 id=&quot;44-terminatedstopped-state&quot;&gt;4.4 Terminated/Stopped state&lt;/h4&gt;
&lt;p&gt;Processes can end when they call the exit system themselves or receive signals to end. We use &lt;code class=&quot;highlighter-rouge&quot;&gt;kill -9 &amp;lt;PID&amp;gt;&lt;/code&gt; to kill a process.&lt;/p&gt;

&lt;p&gt;See more at &lt;a href=&quot;https://github.com/hieuhtr/Blog/blob/master/2017/Signal-of-Linux.md&quot;&gt;Signals&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;45-zombie-state&quot;&gt;4.5 Zombie state&lt;/h4&gt;
&lt;p&gt;When a process dies on Linux, it isn’t all removed from memory immediately — its process descriptor stays in memory (the process descriptor only takes a tiny amount of memory). The process’s status becomes &lt;code class=&quot;highlighter-rouge&quot;&gt;EXIT_ZOMBIE&lt;/code&gt; and the process’s parent is notified that its child process has died with the &lt;code class=&quot;highlighter-rouge&quot;&gt;SIGCHLD&lt;/code&gt; signal. The parent process is then supposed to execute the &lt;code class=&quot;highlighter-rouge&quot;&gt;wait()&lt;/code&gt; system call to read the dead process’s exit status and other information. This allows the parent process to get information from the dead process. After &lt;code class=&quot;highlighter-rouge&quot;&gt;wait()&lt;/code&gt; is called, the zombie process is completely removed from memory.&lt;/p&gt;

&lt;p&gt;This normally happens very quickly, so you won’t see zombie processes accumulating on your system. However, if a parent process isn’t programmed properly and never calls wait(), its zombie children will stick around in memory until they’re cleaned up. - from &lt;a href=&quot;https://www.howtogeek.com/119815/htg-explains-what-is-a-zombie-process-on-linux/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Zombies that exist for more than a short period of time typically indicate a bug in the parent program, or just an uncommon decision to not reap children (see example). If the parent program is no longer running, zombie processes typically indicate a bug in the operating system. - from &lt;a href=&quot;https://en.wikipedia.org/wiki/Zombie_process&quot;&gt;Wiki&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Here are the different values that the s, stat and state output specifiers (header “STAT” or “S”) will display to describe the state of a process:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;D:    uninterruptible sleep (usually IO)&lt;/li&gt;
  &lt;li&gt;R:    running or runnable (on run queue)&lt;/li&gt;
  &lt;li&gt;S:    interruptible sleep (waiting for an event to complete)&lt;/li&gt;
  &lt;li&gt;T:    stopped by job control signal&lt;/li&gt;
  &lt;li&gt;t:    stopped by debugger during the tracing&lt;/li&gt;
  &lt;li&gt;W:    paging (not valid since the 2.6.xx kernel)&lt;/li&gt;
  &lt;li&gt;X:    dead (should never be seen)&lt;/li&gt;
  &lt;li&gt;Z:    defunct (“zombie”) process, terminated but not reaped by its parent&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See state of all processes by using &lt;code class=&quot;highlighter-rouge&quot;&gt;ps -el&lt;/code&gt; command.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯❯ ps -el
F S   UID   PID  PPID  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD
4 S     0     1     0  0  80   0 - 29910 -      ?        00:00:04 systemd
1 S     0     2     0  0  80   0 -     0 -      ?        00:00:00 kthreadd
1 S     0     4     2  0  60 -20 -     0 -      ?        00:00:00 kworker/0:0H
...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Something more:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Understanding Linux Process States- See &lt;a href=&quot;https://access.redhat.com/sites/default/files/attachments/processstates_20120831.pdf&quot;&gt;document from RedHat&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Signals- See &lt;a href=&quot;https://github.com/hieuhtr/Blog/blob/master/2017/Signal-of-Linux.md&quot;&gt;Signals of Linux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Zombie process - See &lt;a href=&quot;https://en.wikipedia.org/wiki/Zombie_process&quot;&gt;Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;5-cpu-organization-and-operation&quot;&gt;5. CPU organization and operation&lt;/h3&gt;
</description>
        <pubDate>Sun, 16 Jul 2017 00:00:00 +0700</pubDate>
        <link>https://llnx.me/technical/2017/07/16/Understanding-top-command.html</link>
        <guid isPermaLink="true">https://llnx.me/technical/2017/07/16/Understanding-top-command.html</guid>
        
        
        <category>technical</category>
        
      </item>
    
  </channel>
</rss>
